name: web_deploy

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ['STAGING', 'PROD']
      fail-fast: true
      max-parallel: 1
    environment: ${{ matrix.env }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Tag release
      if: ${{ matrix.env }} == 'STAGING'
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ format('web/{0}', github.run_number) }}
        tag_prefix: ''

    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'

    - name: npm ci
      run: npm ci
      working-directory: admin

    - name: npm build
      run: npm run build
      working-directory: admin

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: backend/vendor
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
    
    - name: composer install
      uses: php-actions/composer@v6
      with:
        php_version: 7.4
        version: 1
        working_dir: backend
        dev: no
        args: --optimize-autoloader
      env:
        APP_ENV: prod

    - name: use alpine
      uses: docker://alpine:latest
    
    - name: move files around
      run: |
        mkdir dist
        cp -r admin/build/* dist
        cp -r backend/config dist
        cp -r backend/public/* dist
        cp -r backend/src dist
        mkdir dist/var
        cp -r backend/composer.* dist
        cp -r backend/.env dist
        sed -i 's/dirname(__DIR__)/__DIR__/' dist/index.php

    # This did not work for quite some while, so disabling it for time being
    # - name: Extract branch name
    #   shell: bash
    #   run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
    #   id: extract_branch

    # # todo: replace this action bc it uses node 12 and set-output commands
    # - uses: nrwl/last-successful-commit-action@v1
    #   id: last_successful_commit
    #   name: check last successful run
    #   with:
    #     branch: ${{ steps.extract_branch.outputs.branch }}
    #     workflow_id: 'main.yml'
    #     github_token: ${{ secrets.GITHUB_TOKEN }}

    # - name: check if composer neeeds to run
    #   id: check_composer
    #   run: |
    #     git fetch --all
    #     git diff-tree --no-commit-id --name-only -r ${{ steps.last_successful_commit.outputs.commit_hash }}..${{ github.sha }} | grep composer > /dev/null \
    #       && echo "exit_code=0" >> $GITHUB_OUTPUT \
    #       || echo "exit_code=1" >> $GITHUB_OUTPUT

    - name: move composer dependencies
      # if: steps.check_composer.outputs.exit_code == 0
      run: cp -r backend/vendor dist

    - name: deployment to server
      uses: tjarksaul/SFTP-Deploy-Action@d1c7a725df9093b6c6700d2505b0b2df21c6f666
      with:
        server: '${{ secrets.FTP_SERVER }}'
        username: ${{ secrets.FTP_USERNAME }}
        ssh_private_key: ${{ secrets.SFTP_PRIVATE_KEY }}
        local_path: './dist/'
        remote_path: '${{ secrets.FTP_PATH }}'

# todo: run migrations
