name: android_deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  determine_changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.android }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: 'main'
          filters: |
            android:
              - 'android/**'

  build_and_sign:
    needs: determine_changes
    # run this step either on changes in the repo or if the workflow was manually triggered
    if: ${{ (needs.determine_changes.outputs.changes == 'true') || (github.event_name == 'workflow_dispatch') }}
    strategy:
      matrix:
        env: ['STAGING', 'PROD']
      fail-fast: true
      max-parallel: 1
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup configs
        working-directory: android
        env:
          backendUrl: ${{ secrets.APP_BACKEND_URL }}
          databaseName: ${{ secrets.APP_DATABASE_NAME }}
          CLIENT_KEYSTORE_BASE_64: ${{ secrets.CLIENT_KEYSTORE_BASE_64 }}
          CLIENT_KEYSTORE_PASSWORD: ${{ secrets.CLIENT_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo -e "backendUrl=\"$backendUrl\"\ndatabaseName=\"$databaseName\"" > ./project_resources/config.properties \
            && echo $CLIENT_KEYSTORE_BASE_64 | base64 -d > project_resources/release.keystore \
            && bash ./setup_keystore.sh \
            && cat <<< $(jq '.client[0].client_info.android_client_info.package_name="${{ secrets.APP_APPLICATION_ID }}"' app/google-services.json) > app/google-services.json \
            && sed -i 's/applicationId.*/applicationId "${{ secrets.APP_APPLICATION_ID }}"/' app/build.gradle \
            && sed -i 's:<string name="app_name">.*</string>:<string name="app_name">${{ secrets.APP_APP_NAME }}</string>:' app/src/main/res/values/strings.xml

      - name: Assemble release build
        working-directory: android
        run: |
          ./gradlew app:bundleRelease

      - name: deployment to server
        uses: tjarksaul/SFTP-Deploy-Action@1f9d3f7e125f06dc57760d081a04bca1d49a6dc1
        with:
          server: '${{ secrets.FTP_SERVER }}'
          username: ${{ secrets.FTP_USERNAME }}
          ssh_private_key: ${{ secrets.SFTP_PRIVATE_KEY }}
          local_path: './android/app/build/outputs/bundle/release/app-release.aab'
          remote_path: '${{ secrets.FTP_PATH }}/beachist-${{ matrix.env }}-${{ github.run_number }}.aab'

      - name: Teams Notification
        if: ${{ matrix.env }} == 'STAGING'
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: Ein neuer Build ist verf√ºgbar unter ${{ secrets.BUILD_URL }}${{ matrix.env }}-${{ github.run_number }}.aab
          notification-color: 28a745
          timezone: Europe/Berlin
          
      - name: Upload Android Release to Play Store
        env:
          STORE_UPLOAD: ${{ secrets.STORE_UPLOAD }}
        if: "${{ env.STORE_UPLOAD == 'true' }}"
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: '${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}'
          packageName: '${{ secrets.PLAY_STORE_PACKAGE_NAME }}'
          releaseFiles: './android/app/build/outputs/bundle/release/app-release.aab'
          track: '${{ secrets.PLAY_STORE_TRACK }}'
          status: 'draft'
          inAppUpdatePriority: 5
