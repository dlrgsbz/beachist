name: web

on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: install node
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    # Runs a single command using the runners shell
    - name: npm ci
      run: npm ci
      working-directory: admin

    - name: npm build
      run: npm run build
      working-directory: admin

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - uses: nrwl/last-successful-commit-action@v1
      id: last_successful_commit
      name: check last successful run
      with:
        branch: ${{ steps.extract_branch.outputs.branch }}
        workflow_id: 'main.yml'
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
    
    - name: composer install
      uses: php-actions/composer@v5
      with:
        php_version: 7.4
        version: 1
        working_dir: backend
        dev: no
        args: --optimize-autoloader
      env:
        APP_ENV: prod

    - name: use alpine
      uses: docker://alpine:latest
    
    - name: move files around
      run: |
        mkdir dist
        cp -r admin/build/* dist
        cp -r backend/config dist
        cp -r backend/public/* dist
        cp -r backend/src dist
        mkdir dist/var
        cp -r backend/composer.* dist
        cp -r backend/.env dist
        sed -i 's/dirname(__DIR__)/__DIR__/' dist/index.php

    - name: check if composer neeeds to run
      id: check_composer
      run: |
        git fetch --all
        git diff-tree --no-commit-id --name-only -r ${{ steps.last_successful_commit.outputs.commit_hash }}..${{ github.sha }} | grep composer > /dev/null \
          && echo ::set-output name=exit_code::0 \
          || echo ::set-output name=exit_code::1

    - name: move composer dependencies
      if: steps.check_composer.outputs.exit_code == 0
      run: cp -r backend/vendor dist

    - name: deployment to server
      uses: tjarksaul/SFTP-Deploy-Action@d1c7a725df9093b6c6700d2505b0b2df21c6f666
      with:
        server: '${{ secrets.FTP_SERVER }}'
        username: ${{ secrets.FTP_USERNAME }}
        ssh_private_key: ${{ secrets.SFTP_PRIVATE_KEY }}
        local_path: './dist/'
        remote_path: '/public_html'

# todo: run migrations