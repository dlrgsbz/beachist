[{"/Users/tjark.saul/dev/beachist/lambdas/src/config.ts":"1","/Users/tjark.saul/dev/beachist/lambdas/src/index.ts":"2","/Users/tjark.saul/dev/beachist/lambdas/src/iot-triggers/create-entry/index.ts":"3","/Users/tjark.saul/dev/beachist/lambdas/src/utils.ts":"4","/Users/tjark.saul/dev/beachist/lambdas/cdk/cdk.ts":"5","/Users/tjark.saul/dev/beachist/lambdas/cdk/config.ts":"6","/Users/tjark.saul/dev/beachist/lambdas/cdk/infra.ts":"7","/Users/tjark.saul/dev/beachist/lambdas/cdk/pipeline.ts":"8"},{"size":196,"mtime":1644842377923,"results":"9","hashOfConfig":"10"},{"size":65,"mtime":1644787954968,"results":"11","hashOfConfig":"10"},{"size":765,"mtime":1644829948295,"results":"12","hashOfConfig":"10"},{"size":198,"mtime":1644842748531,"results":"13","hashOfConfig":"10"},{"size":974,"mtime":1644842981051,"results":"14","hashOfConfig":"10"},{"size":1261,"mtime":1644843075320,"results":"15","hashOfConfig":"10"},{"size":3718,"mtime":1644843056391,"results":"16","hashOfConfig":"10"},{"size":2868,"mtime":1644787716876,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wk38u2",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tjark.saul/dev/beachist/lambdas/src/config.ts",[],[],"/Users/tjark.saul/dev/beachist/lambdas/src/index.ts",[],[],"/Users/tjark.saul/dev/beachist/lambdas/src/iot-triggers/create-entry/index.ts",["44","45"],[],"import axios from \"axios\"\nimport { config } from '../../config'\n\ninterface CreateEntryInput {\n    iotThingName: string\n    fieldId: string\n    state: boolean\n    stateKind?: StateKind\n    amount?: number\n    note?: string\n    crew: string\n}\n\nenum StateKind {\n    broken = 'broken',\n    tooLittle = 'tooLittle',\n    other = 'other',\n}\n\nexport const createEntryHandler = async (event: Partial<CreateEntryInput>): Promise<void> => {\n    const { iotThingName, fieldId, ...rest } = event\n\n    // todo: map iotThingName to stationId\n\n    const stationId = '19f19df0-da30-44e2-b0ab-9f6992fcc9cd'\n\n    const result = await axios.post(`${config.BACKEND_URL}station/${stationId}/field/${fieldId}/entry`, rest)\n\n    // todo: publish success to mqtt\n\n    console.log(result)\n}\n","/Users/tjark.saul/dev/beachist/lambdas/src/utils.ts",[],[],"/Users/tjark.saul/dev/beachist/lambdas/cdk/cdk.ts",[],["46"],"/Users/tjark.saul/dev/beachist/lambdas/cdk/config.ts",[],[],"/Users/tjark.saul/dev/beachist/lambdas/cdk/infra.ts",["47"],[],"import * as path from 'path'\nimport { Construct, Stack } from \"@aws-cdk/core\"\nimport { IotSql, TopicRule } from '@aws-cdk/aws-iot'\nimport { Code, Runtime, Function as LambdaFunction } from '@aws-cdk/aws-lambda'\nimport { StackProps } from \"./cdk\"\nimport * as iam from '@aws-cdk/aws-iam';\nimport { environmentProps, Stage, Timeouts } from './config'\nimport { IotRepublishMqttAction, LambdaFunctionAction, MqttQualityOfService } from '@aws-cdk/aws-iot-actions';\n\ninterface LambdaEnvs {\n    STAGE: Stage\n    BACKEND_URL: string\n}\n\nexport class InfraStack extends Stack {\n    private readonly code: Code\n\n    private readonly lambdaEnvs: LambdaEnvs\n\n    constructor(scope: Construct, id: string, props: StackProps) {\n        super(scope, id)\n        const handlerPrefix = 'dist/index.'\n\n        this.code = Code.fromAsset(path.join(__dirname, '../dist/index.js.zip'))\n\n        this.lambdaEnvs = {\n            STAGE: environmentProps.stage,\n            BACKEND_URL: environmentProps.backendUrl,\n        }\n\n        this.createCreateEntryHandler(handlerPrefix, props)\n        this.createLastWillTopic(props)\n    }\n\n    private createLastWillTopic(props: StackProps) {\n        /*\n{\n    \"rule\": {\n    \"ruleDisabled\": false,\n    \"sql\": \"SELECT * FROM 'my/things/myLightBulb/update'\",\n    \"description\": \"Turn my/things/ into $aws/things/\",\n    \"actions\": [\n        {\n        \"republish\": {\n            \"topic\": \"$$aws/things/myLightBulb/shadow/update\",\n            \"roleArn\": \"arn:aws:iam:123456789012:role/aws_iot_republish\"\n            }\n        }\n     ]\n   }\n}\n        */\n        new TopicRule(this, 'update-shadow-last-will-rule', {\n            topicRuleName: `beachist${props.stage}UpdateShadowLastWillRule`,\n            sql: IotSql.fromStringAsVer20160323(\n                `SELECT * FROM '+/connected/update'`\n            ),\n            actions: [new IotRepublishMqttAction(\n                '$$aws/things/${topic(1)}/shadow/update',\n                { qualityOfService: MqttQualityOfService.AT_LEAST_ONCE }\n            )]\n        })\n    }\n\n    private createCreateEntryHandler(handlerPrefix: string, props: StackProps) {\n        const createEntryHandler = this.lambdaFunction(\n            `${props.prefix}-create-entry`,\n            `${handlerPrefix}createEntryHandler`,\n            this.lambdaEnvs,\n        );\n\n        addIotPublishToTopic(createEntryHandler);\n\n        new TopicRule(this, 'create-entry-rule', {\n            topicRuleName: `beachist${props.stage}CreateEntryRule`,\n            sql: IotSql.fromStringAsVer20160323(\n                `SELECT state, stateKind, amount, note, crew, topic(1) AS iotThingName, topic(3) AS fieldId\n                  FROM '+/field/+/entry'`,\n            ),\n            actions: [new LambdaFunctionAction(createEntryHandler)],\n        });\n    }\n\n    lambdaFunction(name: string, handler: string, environment: LambdaEnvs): LambdaFunction {\n        return new LambdaFunction(this, name, {\n            functionName: name,\n            runtime: Runtime.NODEJS_14_X,\n            code: this.code,\n            handler,\n            memorySize: 1024,\n            timeout: Timeouts.lambdaTimeout,\n            environment: environment as unknown as Record<string, string>,\n        })\n    }\n}\n\nfunction addIotShadowUpdatePermission(f: LambdaFunction) {\n    f.addToRolePolicy(\n        new iam.PolicyStatement({\n            actions: ['iot:UpdateThingShadow'],\n            resources: ['*'],\n            effect: iam.Effect.ALLOW,\n        }),\n    );\n}\n\nfunction addIotPublishToTopic(f: LambdaFunction) {\n    f.addToRolePolicy(\n        new iam.PolicyStatement({\n            actions: ['iot:Publish', 'iot:Connect'],\n            resources: ['*'],\n            effect: iam.Effect.ALLOW,\n        }),\n    );\n}\n","/Users/tjark.saul/dev/beachist/lambdas/cdk/pipeline.ts",[],[],{"ruleId":"48","severity":1,"message":"49","line":21,"column":13,"nodeType":"50","messageId":"51","endLine":21,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":31,"column":5,"nodeType":"54","messageId":"55","endLine":31,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":35,"column":5,"nodeType":"54","messageId":"55","endLine":35,"endColumn":18,"suppressions":"56"},{"ruleId":"48","severity":1,"message":"57","line":97,"column":10,"nodeType":"50","messageId":"51","endLine":97,"endColumn":38},"@typescript-eslint/no-unused-vars","'iotThingName' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected",["58"],"'addIotShadowUpdatePermission' is defined but never used.",{"kind":"59","justification":"60"},"directive",""]